name: Build Go Binary
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Compile Binary
    runs-on: ubuntu-latest
    env:
      RUNNER_TOOL_CACHE: /toolcache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y gcc musl-tools gcc-aarch64-linux-gnu

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.2

      - name: Cache Go Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build x86_64 dynamically linked
        run: |
          CGO_ENABLED=1 CC=gcc go build -o bin/app-linux-amd64-dynamic ./cmd/mnemonic-crack

      - name: Build x86_64 statically linked
        run: |
          CGO_ENABLED=1 CC=musl-gcc go build -ldflags '-extldflags "-static"' -o bin/app-linux-amd64-static ./cmd/mnemonic-crack

      - name: Build ARM64 dynamically linked
        run: |
          CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc GOARCH=arm64 GOOS=linux go build -o bin/app-linux-arm64-dynamic ./cmd/mnemonic-crack

      - name: Build ARM64 statically linked
        run: |
          CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc GOARCH=arm64 GOOS=linux \
          go build -ldflags '-extldflags "-static"' -o bin/app-linux-arm64-static ./cmd/mnemonic-crack